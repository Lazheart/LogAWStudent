name: Auto Release on main push

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Get current version
        id: get_version
        run: |
          if [ -f pyproject.toml ]; then
            VERSION=$(grep -E '^version ?=' pyproject.toml | head -1 | cut -d '"' -f2)
          else
            VERSION="0.0.0"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump version (patch)
        id: bump_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ steps.get_version.outputs.version }}"
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          sed -i "s/^version = .*/version = \"$new_version\"/" pyproject.toml

      - name: Commit new version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "chore(release): bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag "v${{ steps.bump_version.outputs.new_version }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          name: "Release v${{ steps.bump_version.outputs.new_version }}"
          body: "Automated release of version ${{ steps.bump_version.outputs.new_version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
